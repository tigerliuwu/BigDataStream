/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package local_project.sparkdemo1_0_1;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class row1Struct extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, java.io.Serializable {
  /** Default serial version UID. */
  public static final int serialVersionUID = 1;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"row1Struct\",\"namespace\":\"local_project.sparkdemo1_0_1\",\"fields\":[{\"name\":\"newColumn\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.lang.String\"},\"null\"]},{\"name\":\"newColumn1\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.lang.String\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public java.lang.String newColumn;
   public java.lang.String newColumn1;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return newColumn;
    case 1: return newColumn1;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: newColumn = (java.lang.String)value$; break;
    case 1: newColumn1 = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'newColumn' field.
   */
  public java.lang.String getNewColumn() {
    return newColumn;
  }

  /**
   * Sets the value of the 'newColumn' field.
   * @param value the value to set.
   */
  public void setNewColumn(java.lang.String value) {
    this.newColumn = value;
  }

  /**
   * Gets the value of the 'newColumn1' field.
   */
  public java.lang.String getNewColumn1() {
    return newColumn1;
  }

  /**
   * Sets the value of the 'newColumn1' field.
   * @param value the value to set.
   */
  public void setNewColumn1(java.lang.String value) {
    this.newColumn1 = value;
  }

  /** Creates a new row1Struct RecordBuilder */
  public static local_project.sparkdemo1_0_1.row1Struct.Builder newBuilder() {
    return new local_project.sparkdemo1_0_1.row1Struct.Builder();
  }
  
  /** Creates a new row1Struct RecordBuilder by copying an existing Builder */
  public static local_project.sparkdemo1_0_1.row1Struct.Builder newBuilder(local_project.sparkdemo1_0_1.row1Struct.Builder other) {
    return new local_project.sparkdemo1_0_1.row1Struct.Builder(other);
  }
  
  /** Creates a new row1Struct RecordBuilder by copying an existing row1Struct instance */
  public static local_project.sparkdemo1_0_1.row1Struct.Builder newBuilder(local_project.sparkdemo1_0_1.row1Struct other) {
    return new local_project.sparkdemo1_0_1.row1Struct.Builder(other);
  }
  
  /**
   * RecordBuilder for row1Struct instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<row1Struct>
    implements org.apache.avro.data.RecordBuilder<row1Struct> {

    private java.lang.String newColumn;
    private java.lang.String newColumn1;

    /** Creates a new Builder */
    private Builder() {
      super(local_project.sparkdemo1_0_1.row1Struct.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(local_project.sparkdemo1_0_1.row1Struct.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.newColumn)) {
        this.newColumn = data().deepCopy(fields()[0].schema(), other.newColumn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.newColumn1)) {
        this.newColumn1 = data().deepCopy(fields()[1].schema(), other.newColumn1);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing row1Struct instance */
    private Builder(local_project.sparkdemo1_0_1.row1Struct other) {
            super(local_project.sparkdemo1_0_1.row1Struct.SCHEMA$);
      if (isValidValue(fields()[0], other.newColumn)) {
        this.newColumn = data().deepCopy(fields()[0].schema(), other.newColumn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.newColumn1)) {
        this.newColumn1 = data().deepCopy(fields()[1].schema(), other.newColumn1);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'newColumn' field */
    public java.lang.String getNewColumn() {
      return newColumn;
    }
    
    /** Sets the value of the 'newColumn' field */
    public local_project.sparkdemo1_0_1.row1Struct.Builder setNewColumn(java.lang.String value) {
      validate(fields()[0], value);
      this.newColumn = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'newColumn' field has been set */
    public boolean hasNewColumn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'newColumn' field */
    public local_project.sparkdemo1_0_1.row1Struct.Builder clearNewColumn() {
      newColumn = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'newColumn1' field */
    public java.lang.String getNewColumn1() {
      return newColumn1;
    }
    
    /** Sets the value of the 'newColumn1' field */
    public local_project.sparkdemo1_0_1.row1Struct.Builder setNewColumn1(java.lang.String value) {
      validate(fields()[1], value);
      this.newColumn1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'newColumn1' field has been set */
    public boolean hasNewColumn1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'newColumn1' field */
    public local_project.sparkdemo1_0_1.row1Struct.Builder clearNewColumn1() {
      newColumn1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }


    public row1Struct build() {
      try {
        row1Struct record = new row1Struct();
        record.newColumn = fieldSetFlags()[0] ? this.newColumn : (java.lang.String) defaultValue(fields()[0]);
        record.newColumn1 = fieldSetFlags()[1] ? this.newColumn1 : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}