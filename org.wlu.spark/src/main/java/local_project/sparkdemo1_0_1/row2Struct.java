/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package local_project.sparkdemo1_0_1;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class row2Struct extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, java.io.Serializable {
  /** Default serial version UID. */
  public static final int serialVersionUID = 1;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"row2Struct\",\"namespace\":\"local_project.sparkdemo1_0_1\",\"fields\":[{\"name\":\"newColumn\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.lang.String\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public java.lang.String newColumn;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return newColumn;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: newColumn = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'newColumn' field.
   */
  public java.lang.String getNewColumn() {
    return newColumn;
  }

  /**
   * Sets the value of the 'newColumn' field.
   * @param value the value to set.
   */
  public void setNewColumn(java.lang.String value) {
    this.newColumn = value;
  }

  /** Creates a new row2Struct RecordBuilder */
  public static local_project.sparkdemo1_0_1.row2Struct.Builder newBuilder() {
    return new local_project.sparkdemo1_0_1.row2Struct.Builder();
  }
  
  /** Creates a new row2Struct RecordBuilder by copying an existing Builder */
  public static local_project.sparkdemo1_0_1.row2Struct.Builder newBuilder(local_project.sparkdemo1_0_1.row2Struct.Builder other) {
    return new local_project.sparkdemo1_0_1.row2Struct.Builder(other);
  }
  
  /** Creates a new row2Struct RecordBuilder by copying an existing row2Struct instance */
  public static local_project.sparkdemo1_0_1.row2Struct.Builder newBuilder(local_project.sparkdemo1_0_1.row2Struct other) {
    return new local_project.sparkdemo1_0_1.row2Struct.Builder(other);
  }
  
  /**
   * RecordBuilder for row2Struct instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<row2Struct>
    implements org.apache.avro.data.RecordBuilder<row2Struct> {

    private java.lang.String newColumn;

    /** Creates a new Builder */
    private Builder() {
      super(local_project.sparkdemo1_0_1.row2Struct.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(local_project.sparkdemo1_0_1.row2Struct.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.newColumn)) {
        this.newColumn = data().deepCopy(fields()[0].schema(), other.newColumn);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing row2Struct instance */
    private Builder(local_project.sparkdemo1_0_1.row2Struct other) {
            super(local_project.sparkdemo1_0_1.row2Struct.SCHEMA$);
      if (isValidValue(fields()[0], other.newColumn)) {
        this.newColumn = data().deepCopy(fields()[0].schema(), other.newColumn);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'newColumn' field */
    public java.lang.String getNewColumn() {
      return newColumn;
    }
    
    /** Sets the value of the 'newColumn' field */
    public local_project.sparkdemo1_0_1.row2Struct.Builder setNewColumn(java.lang.String value) {
      validate(fields()[0], value);
      this.newColumn = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'newColumn' field has been set */
    public boolean hasNewColumn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'newColumn' field */
    public local_project.sparkdemo1_0_1.row2Struct.Builder clearNewColumn() {
      newColumn = null;
      fieldSetFlags()[0] = false;
      return this;
    }


    public row2Struct build() {
      try {
        row2Struct record = new row2Struct();
        record.newColumn = fieldSetFlags()[0] ? this.newColumn : (java.lang.String) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}